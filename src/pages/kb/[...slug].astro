---
import { getCollection } from "astro:content";
import { buildStaticPaths, getChildren } from "../../utils/astro";

import Layout from "../../layouts/Base.astro";
import Container from "../../components/Container.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import TableOfContents from "../../components/TableOfContents.astro";

export async function getStaticPaths() {
  return buildStaticPaths(await getCollection("kb", (item) => item.data.isDraft === false));
}

const {
  slug,
  render,
  data: { title, excerpt, publishDate, updatedDate, image },
} = Astro.props;
const displayedDate = updatedDate || publishDate;
const { Content, remarkPluginFrontmatter, headings } = await render();

const childrenLevel1 = getChildren(await getCollection("kb", (item) => item.data.isDraft === false), slug);

---

<Layout title={title} description={excerpt} image={image}>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
        <Breadcrumbs />
      </span>
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight"
      >
        {title}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        {
          displayedDate && (
            <time class="text-gray-400" datetime={displayedDate.toISOString()}>
              {displayedDate.toDateString()}
            </time>
            <span class="text-gray-400 hidden md:block">â€¢</span>
          )
        }
        <div class="w-full md:w-auto flex flex-wrap gap-3">
          <span class="text-sm text-gray-500">{remarkPluginFrontmatter.minutesRead}</span>
        </div>
      </div>
    </div>


    <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
      {Boolean(headings.length) && (<div class="p-4 mb-4 text-sm text-blue-800 rounded-lg bg-blue-50 dark:bg-gray-800 dark:text-blue-400" role="alert">
        <span class="font-medium">Table of Contents</span>
        <p class="text-medium">
          <TableOfContents headings={headings} />
        </p>
      </div>)}
      
      <Content />
    </div>

    
    {!!childrenLevel1.length && (
      <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
        <h2>Pages in this Category</h2>
        <ul class="list-disc">
          {childrenLevel1.map((item) => (
            <li><a href={"/kb/" + item.slug}>{item.data.title}</a></li>
          ))}
        </ul>
      </div>
    )}

  </Container>
</Layout>
